<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ht.dao.mapper.NodeInfoMapper">
  <resultMap id="BaseResultMap" type="com.ht.model.NodeInfo">
    <id column="node_id" jdbcType="INTEGER" property="nodeId" />
    <result column="node_name" jdbcType="VARCHAR" property="nodeName" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="node_type" jdbcType="VARCHAR" property="nodeType" />
    <result column="parent_node_list" jdbcType="VARCHAR" property="parentNodeList" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    node_id, node_name, parent_id, node_type, parent_node_list, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ht_node_info
    where node_id = #{nodeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ht_node_info
    where node_id = #{nodeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ht.model.NodeInfo" keyColumn="nodeId" useGeneratedKeys="true" keyProperty="nodeId">
    insert into ht_node_info ( node_name, parent_id,
      node_type, parent_node_list, create_time, 
      update_time)
    values ( #{nodeName,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER},
      #{nodeType,jdbcType=VARCHAR}, #{parentNodeList,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ht.model.NodeInfo">
    insert into ht_node_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="nodeName != null">
        node_name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="nodeType != null">
        node_type,
      </if>
      <if test="parentNodeList != null">
        parent_node_list,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nodeId != null">
        #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="nodeName != null">
        #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="nodeType != null">
        #{nodeType,jdbcType=VARCHAR},
      </if>
      <if test="parentNodeList != null">
        #{parentNodeList,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ht.model.NodeInfo">
    update ht_node_info
    <set>
      <if test="nodeName != null">
        node_name = #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="nodeType != null">
        node_type = #{nodeType,jdbcType=VARCHAR},
      </if>
      <if test="parentNodeList != null">
        parent_node_list = #{parentNodeList,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where node_id = #{nodeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ht.model.NodeInfo">
    update ht_node_info
    set node_name = #{nodeName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      node_type = #{nodeType,jdbcType=VARCHAR},
      parent_node_list = #{parentNodeList,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where node_id = #{nodeId,jdbcType=INTEGER}
  </update>
</mapper>